#include <stdio.h>
#include <stdlib.h>

#define MAX 5

struct Queue {
    int arr[MAX];
    int front;
    int rear;
};


void initQueue(struct Queue* queue) {
    queue->front = -1;
    queue->rear = -1;
}


int isFull(struct Queue* queue) {
    return queue->rear == MAX - 1;
}


int isEmpty(struct Queue* queue) {
    return queue->front == -1;
}


void insert(struct Queue* queue, int item) {
    if (isFull(queue)) {
        printf("Queue Overflow! Cannot insert element %d.\n", item);
    } else {
        if (queue->front == -1) {
            queue->front = 0;
        }
        queue->rear++;
        queue->arr[queue->rear] = item;
        printf("Element %d inserted into the queue.\n", item);
    }
}


int delete(struct Queue* queue) {
    if (isEmpty(queue)) {
        printf("Queue Underflow! Cannot delete element.\n");
        return -1;
    } else {
        int item = queue->arr[queue->front];
        if (queue->front == queue->rear) {
            queue->front = queue->rear = -1;
        } else {
            queue->front++;
        }
        return item;
    }
}


void display(struct Queue* queue) {
    if (isEmpty(queue)) {
        printf("Queue is empty.\n");
    } else {
        printf("Queue elements are: ");
        for (int i = queue->front; i <= queue->rear; i++) {
            printf("%d ", queue->arr[i]);
        }
        printf("\n");
    }
}
