#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define MAX_NODES 10  

struct Graph {
    int vertices;
    int adj[MAX_NODES][MAX_NODES];
};


void initGraph(struct Graph* g, int vertices) {
    g->vertices = vertices;
    for (int i = 0; i < vertices; i++) {
        for (int j = 0; j < vertices; j++) {
            g->adj[i][j] = 0;  
        }
    }
}


void addEdge(struct Graph* g, int src, int dest) {
    g->adj[src][dest] = 1;
    g->adj[dest][src] = 1;  
}


void DFS(struct Graph* g, int node, bool visited[]) {
    visited[node] = true; 

    
    for (int i = 0; i < g->vertices; i++) {
        if (g->adj[node][i] == 1 && !visited[i]) {
            DFS(g, i, visited);
        }
    }
}


bool isConnected(struct Graph* g) {
    bool visited[MAX_NODES] = {false};  

   
    DFS(g, 0, visited);

    
    for (int i = 0; i < g->vertices; i++) {
        if (!visited[i]) {
            return false;  
        }
    }

    return true; 
}

int main() {
    struct Graph g;
    int vertices = 6;

 
    initGraph(&g, vertices);

 
    addEdge(&g, 0, 1);
    addEdge(&g, 0, 2);
    addEdge(&g, 1, 3);
    addEdge(&g, 1, 4);
    addEdge(&g, 2, 5);

   
    if (isConnected(&g)) {
        printf("The graph is connected.\n");
    } else {
        printf("The graph is not connected.\n");
    }

    return 0;
}
